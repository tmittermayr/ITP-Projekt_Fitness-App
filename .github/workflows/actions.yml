name: GitHub Release Action
run-name: ${{ github.actor }} is building a release!
on:
  push:
    branches:
      - main

jobs:
  electron:
      runs-on: ${{ matrix.os }}
  
      strategy:
        matrix:
          os: [windows-latest, macos-latest] 
        
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v3
  
        - name: Use Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 20
          
        - name: Run electron on windows  
          if: startsWith(matrix.os, 'windows-latest')
          run: |
              cd code/frontend
              npm i
              npm run build
              npm run electron:make-windows

        - name: Upload Windows file
          if: startsWith(matrix.os, 'windows-latest')
          uses: svenstaro/upload-release-action@v2
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: code/frontend/out/make/squirrel.windows/x64/nextfit-0.0.1 Setup.exe
            tag: v0.0.${{ github.run_number }}
            asset_name: nextfit-windows-setup.exe
            overwrite: true
            prerelease: true

        - name: Run electron on mac  
          if: startsWith(matrix.os, 'macos-latest')
          run: |
              cd code/frontend
              npm i
              npm run build
              npm run electron:make-mac

        - name: Upload Mac file
          if: startsWith(matrix.os, 'macos-latest')
          uses: svenstaro/upload-release-action@v2
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: code/frontend/out/make/zip/darwin/arm64/nextfit-darwin-arm64-0.0.1.zip
            tag: v0.0.${{ github.run_number }}
            asset_name: nextfit-mac.zip
            overwrite: true
            prerelease: true