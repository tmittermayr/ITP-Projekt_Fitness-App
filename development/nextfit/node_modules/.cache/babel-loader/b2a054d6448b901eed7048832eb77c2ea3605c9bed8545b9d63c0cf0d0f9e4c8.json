{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"chart\",\n  class: \"rounded-xl\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC,OAAO;EAACC,KAAK,EAAC;;;uBAAtBC,oBAAyC,OAAzCC,UAAyC","names":["id","class","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["/Users/janangerer/Desktop/5AHITM/ITP/ITP-Projekt_Fitness-App/development/nextfit/src/components/home/ChartBar.vue"],"sourcesContent":["<template>\n  <div id=\"chart\" class=\"rounded-xl\"></div>\n</template>\n\n<script>\nimport Highcharts from 'highcharts';\nimport axios from 'axios';\nimport { Preferences } from \"@capacitor/preferences\";\n\nexport default {\n  data() {\n    return {\n      muscleData: [\n        { name: 'Beine', percentage: 40 },\n        { name: 'RÃ¼cken', percentage: 25 },\n        { name: 'Brust', percentage: 20 },\n        { name: 'Arme', percentage: 15 }\n      ], // Beispiel: Array mit Muskelgruppen und prozentualen Daten\n      token: ''\n    };\n  },\n  mounted() {\n    this.renderChart();\n  },\n  methods: {\n    renderChart() {\n      const data = this.muscleData.map((item) => ({\n        name: item.name,\n        y: item.percentage\n      })); // Konvertiere das Array in das erforderliche Datenformat\n\n      Highcharts.chart('chart', {\n        chart: {\n          type: 'pie'\n        },\n        title: {\n          text: 'Trainierte Muskelgruppen'\n        },\n        tooltip: {\n          pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n        },\n        series: [\n          {\n            name: 'Anteil',\n            colorByPoint: true,\n            data: data\n          }\n        ]\n      });\n    },\n    async getData() {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${await this.getToken()}`;\n      axios\n        .get('http://localhost:3000/stats/total')\n        .then(function (response) {\n          console.log(response) \n          \n        })\n    },\n    async  getToken() {\n        const { value } = await Preferences.get({ key: 'token' })\n        return value ? value : ''\n    }\n  }\n};\n</script>\n\n<style>\n.chart {\n  width: 100%;\n  height: 400px;\n\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}