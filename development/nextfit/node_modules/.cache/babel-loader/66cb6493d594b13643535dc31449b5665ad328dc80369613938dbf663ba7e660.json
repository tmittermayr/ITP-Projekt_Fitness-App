{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"chart\",\n  class: \"rounded-xl\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC,OAAO;EAACC,KAAK,EAAC;;;uBAAtBC,oBAAyC,OAAzCC,UAAyC","names":["id","class","_createElementBlock","_hoisted_1"],"sourceRoot":"","sources":["/Users/janangerer/Desktop/5AHITM/ITP/ITP-Projekt_Fitness-App/development/nextfit/src/components/home/LineChart.vue"],"sourcesContent":["<template>\n  <div id=\"chart\" class=\"rounded-xl\"></div>\n</template>\n\n<script>\nimport Highcharts from 'highcharts';\nimport axios from 'axios';\nimport { Preferences } from \"@capacitor/preferences\";\n\nexport default {\n  data() {\n    return {\n      minutesData: [120, 80, 140, 90, 110, 100, 130] // Beispiel: Array mit Minutenwerten\n    };\n  },\n  mounted() {\n    this.getData();\n  },\n  methods: {\n    renderChart() {\n      const data = this.generateData(); // Generiere das Array mit den Daten\n\n      Highcharts.chart('chart', {\n        title: {\n          text: 'Minuten trainiert (min):'\n        },\n        xAxis: {\n          type: 'datetime',\n          title: {\n            text: 'Datum'\n          },\n          labels: {\n            formatter: function() {\n              return Highcharts.dateFormat('%e. %b', this.value); // Formatierung des Datums\n            }\n          },\n          tickPositioner: function() {\n            const positions = [];\n            const currentDate = new Date();\n\n            for (let i = 6; i >= 0; i--) {\n              const date = new Date(currentDate.getTime() - i * 24 * 60 * 60 * 1000);\n              positions.push(date.getTime());\n            }\n\n            return positions;\n          }\n        },\n        yAxis: {\n          title: {\n            text: 'Minuten'\n          }\n        },\n        series: [{\n          name: 'Minuten',\n          data: data,\n          type: 'line',\n          color: '#FBA92C'\n        }]\n      });\n    },\n    generateData() {\n      const data = [];\n      const currentDate = new Date();\n\n      for (let i = 6; i >= 0; i--) {\n        const date = new Date(currentDate.getTime() - i * 24 * 60 * 60 * 1000);\n        const minutes = this.minutesData[i];\n\n        data.push({\n          x: date.getTime(),\n          y: minutes\n        });\n      }\n\n      return data;\n    },\n    async getData() {\n      await this.calcData()\n      axios.defaults.headers.common['Authorization'] = `Bearer ${await this.getToken()}`;\n      axios\n        .get('http://localhost:3000/stats/total')\n        .then(function (response) {\n          console.log(response.data) \n        })\n      this.renderChart()\n    },\n    async calcData() {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${await this.getToken()}`;\n      return axios\n        .post('http://localhost:3000/stats/calc')\n        .then(function (response) {\n          console.log(response.data) \n        })\n    },\n    async  getToken() {\n        const { value } = await Preferences.get({ key: 'token' })\n        return value ? value : ''\n    }\n  }\n};\n</script>\n\n<style>\n.chart {\n  width: 100%;\n  height: 400px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}